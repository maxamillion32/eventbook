package com.mhafizhasan.eventbook.utils;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;

import com.mhafizhasan.eventbook.utils.Storage;

/**
 * Created by someguy233 on 13-Nov-15.
 */
public class BaseArguments {

    public static final String KEY = "__params__";
    public static final String KEY_CLASSTYPE = "__params__classtype";

    public static <T extends BaseArguments> T from(Bundle bundle, boolean isNullable) {
        String json = bundle.getString(KEY);
        String classType = bundle.getString(KEY_CLASSTYPE);
        if (json == null || classType == null) {
            if(isNullable)
                return null;
            throw new IllegalArgumentException("Bundle not generated by BaseArguments");
        }
        Class<?> type;
        try {
            type = Class.forName(classType);
        } catch (ClassNotFoundException e) {
            throw new IllegalArgumentException("Type not found: " + classType);
        }
        return (T) Storage.fromJson(json, type);
    }

    public static <T extends BaseArguments> T from(Activity activity) {
        return from(activity, false);
    }

        public static <T extends BaseArguments> T from(Activity activity, boolean isNullable) {
        Bundle bundle = activity.getIntent().getBundleExtra(KEY);
        if(bundle == null) {
            if(isNullable)
                return null;
            throw new IllegalArgumentException("Intent not generated by BaseArguments");
        }
        return from(bundle, isNullable);
    }

    public static <T extends BaseArguments> T from(android.support.v4.app.Fragment fragment) {
        return from(fragment, false);
    }

    public static <T extends BaseArguments> T from(android.support.v4.app.Fragment fragment, boolean isNullable) {
        Bundle bundle = fragment.getArguments();
        if(bundle == null) {
            if(isNullable)
                return null;
            throw new RuntimeException("Fragment not created by BaseArguments");
        }
        return from(bundle, isNullable);
    }

    public static <T extends BaseArguments> T from(android.app.Fragment fragment) {
        return from(fragment, false);
    }

    public static <T extends BaseArguments> T from(android.app.Fragment fragment, boolean isNullable) {
        Bundle bundle = fragment.getArguments();
        if(bundle == null) {
            if(isNullable)
                return null;
            throw new RuntimeException("Fragment not created by BaseArguments");
        }
        return from(bundle, isNullable);
    }

    public Bundle bundle() {
        return bundle(new Bundle());
    }

    public Bundle bundle(Bundle with) {
        with.putString(KEY, Storage.toJson(this));
        with.putString(KEY_CLASSTYPE, getClass().getName());
        return with;
    }

    public Intent intent(Intent with) {
        with.putExtra(KEY, bundle());
        return with;
    }

    public void startActivity(Context context, Class<? extends Activity> activityType) {
        Intent intent = new Intent(context, activityType);
        intent = intent(intent);
        context.startActivity(intent);
    }

    public <T extends android.app.Fragment> T createFragment(Class<T> fragmentType) {
        try {
            T fragment = fragmentType.newInstance();
            fragment.setArguments(bundle());
            return fragment;
        } catch (Throwable t) {
            throw new RuntimeException("Unable to instantiate fragment: " + fragmentType.getSimpleName(), t);
        }
    }

    public <T extends android.support.v4.app.Fragment> T createSupportFragment(Class<T> fragmentType) {
        try {
            T fragment = fragmentType.newInstance();
            fragment.setArguments(bundle());
            return fragment;
        } catch (Throwable t) {
            throw new RuntimeException("Unable to instantiate fragment: " + fragmentType.getSimpleName(), t);
        }
    }
}
